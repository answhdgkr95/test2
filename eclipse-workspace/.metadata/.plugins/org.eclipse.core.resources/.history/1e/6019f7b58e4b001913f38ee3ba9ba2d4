package First;

import java.awt.image.BufferedImage;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.IOException;
import javax.imageio.ImageIO;
import java.io.File;
import java.util.Scanner;
import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.*;
import java.awt.event.*;

import javax.swing.*;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import First.MouseListenerAllEx.MyMouseListener;

import javax.swing.JLabel;
import javax.swing.ImageIcon;

class MouseListenerAllEx extends JFrame{
    JPanel contentPane = new JPanel();
    JLabel la = new JLabel("No Mouse Event");
    MouseListenerAllEx(){
        this.setTitle("마우스 이벤트 예제");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        this.setContentPane(contentPane);
        contentPane.addMouseListener(new MyMouseListener());
        contentPane.addMouseMotionListener(new MyMouseListener());
        contentPane.add(la);
        
        this.setSize(300,300);
        this.setVisible(true);
        contentPane.requestFocus();
    }
    
    class MyMouseListener implements MouseListener,MouseMotionListener{

        @Override
        public void mouseClicked(MouseEvent e) {
            la.setText("MouseClicked("+e.getX()+","+e.getY()+")");
        }

        @Override
        public void mousePressed(MouseEvent e) {
            la.setText("MousePressed("+e.getX()+","+e.getY()+")");
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            la.setText("MouseReleased("+e.getX()+","+e.getY()+")");
        }

        @Override
        public void mouseEntered(MouseEvent e) {
            contentPane.setBackground(Color.CYAN);
        }

        @Override
        public void mouseExited(MouseEvent e) {
            contentPane.setBackground(Color.YELLOW);
        }

        @Override
        public void mouseDragged(MouseEvent e) {
            la.setText("MouseDragged("+e.getX()+","+e.getY()+")");
        }

        @Override
        public void mouseMoved(MouseEvent e) {
            la.setText("MouseMoved("+e.getX()+","+e.getY()+")");
        }
        
    }
}

public class Frame1to1 extends JFrame implements MouseListener,    MouseMotionListener {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	int a,b;


	public static void main(String[] args) {
       new MouseListenerAllEx();
		int localX=0;
		int localY=0;
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Frame1to1 frame = new Frame1to1();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		Scanner sc = new Scanner(System.in);
		BufferedImage image = loadImage("D:\\123.png.");  

		int x = image.getWidth(null);  
		int y = image.getHeight(null);  
		
		
		
		Color color = new Color(image.getRGB(localX, localY));   //좌표

		int red = color.getRed();

		int blue = color.getBlue();

		int green = color.getGreen();

		int alpha = color.getBlue();


		System.out.println("red : " + red);

		System.out.println("blue : " + blue);

		System.out.println("green : " + green);

		System.out.println("alpha : " + alpha);

		System.out.println("x : " + x+ ", y : " + y);

	}





public static BufferedImage loadImage(String url) {  

    BufferedImage image = null;  

    try {  

        image = ImageIO.read(new File(url));  

    } catch (IOException e) {  

        e.printStackTrace();  

    }  

    return image;  
    }

	/**
	 * Create the frame.
	 */
	public Frame1to1() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 322, 409);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		
		JLabel label = new JLabel("");
		label.setIcon(new ImageIcon("D:\\123123.jpg"));
		contentPane.add(label, BorderLayout.CENTER);
		
		JPanel panel = new JPanel();
		contentPane.add(panel, BorderLayout.SOUTH);
		
	    JLabel la = new JLabel("No Mouse Event");
		panel.add(la);
		
	}
}
